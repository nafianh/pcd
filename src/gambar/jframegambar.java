/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gambar;

import java.awt.Graphics;
import javax.swing.JFileChooser;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;



/**
 *
 * @author DELL
 */
public class jframegambar extends javax.swing.JFrame {
private ImageIcon ii;
    
    /**
     * Creates new form jframegambar
     */
    public ClassGambar gambar;
    public jframegambar() {
        initComponents();
        slider_Brightness.addChangeListener(new SliderListener());
        isSliderUse(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        slider_rotate = new javax.swing.JSlider();
        slider_Brightness = new javax.swing.JSlider();
        lbl_SliderNumber = new javax.swing.JLabel();
        lbl_derajat = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnFile = new javax.swing.JMenu();
        miBuka = new javax.swing.JMenuItem();
        miSimpan = new javax.swing.JMenuItem();
        miKeluar = new javax.swing.JMenuItem();
        mnEdit = new javax.swing.JMenu();
        miGrayscale = new javax.swing.JMenuItem();
        miBiner = new javax.swing.JMenuItem();
        miDefault = new javax.swing.JMenuItem();
        miBrightness = new javax.swing.JMenuItem();
        mnOpGeometri = new javax.swing.JMenu();
        mizoomin = new javax.swing.JMenuItem();
        mizoomout = new javax.swing.JMenuItem();
        miflipvertikal = new javax.swing.JMenuItem();
        miFliphorizontal = new javax.swing.JMenuItem();
        miRotate = new javax.swing.JMenu();
        mirr90 = new javax.swing.JMenuItem();
        mirl90 = new javax.swing.JMenuItem();
        mir180 = new javax.swing.JMenuItem();
        mirfr = new javax.swing.JMenuItem();
        miTranslasi = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PCD1");

        slider_rotate.setOrientation(javax.swing.JSlider.VERTICAL);
        slider_rotate.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider_rotateStateChanged(evt);
            }
        });

        lbl_SliderNumber.setText("0");

        lbl_derajat.setText("0");

        mnFile.setText("File");

        miBuka.setText("Buka");
        miBuka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBukaActionPerformed(evt);
            }
        });
        mnFile.add(miBuka);

        miSimpan.setText("Simpan");
        miSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSimpanActionPerformed(evt);
            }
        });
        mnFile.add(miSimpan);

        miKeluar.setText("Keluar");
        miKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miKeluarActionPerformed(evt);
            }
        });
        mnFile.add(miKeluar);

        jMenuBar1.add(mnFile);

        mnEdit.setText("Edit");

        miGrayscale.setText("Grayscale");
        miGrayscale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miGrayscaleActionPerformed(evt);
            }
        });
        mnEdit.add(miGrayscale);

        miBiner.setText("Biner");
        miBiner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBinerActionPerformed(evt);
            }
        });
        mnEdit.add(miBiner);

        miDefault.setText("Default");
        miDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miDefaultActionPerformed(evt);
            }
        });
        mnEdit.add(miDefault);

        miBrightness.setText("Brightness");
        miBrightness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miBrightnessActionPerformed(evt);
            }
        });
        mnEdit.add(miBrightness);

        jMenuBar1.add(mnEdit);

        mnOpGeometri.setText("Op. Geometri");

        mizoomin.setText("Zoom In");
        mizoomin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mizoominActionPerformed(evt);
            }
        });
        mnOpGeometri.add(mizoomin);

        mizoomout.setText("Zoom Out");
        mizoomout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mizoomoutActionPerformed(evt);
            }
        });
        mnOpGeometri.add(mizoomout);

        miflipvertikal.setText("Flip Vertikal");
        miflipvertikal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miflipvertikalActionPerformed(evt);
            }
        });
        mnOpGeometri.add(miflipvertikal);

        miFliphorizontal.setText("Flip Horizontal");
        miFliphorizontal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miFliphorizontalActionPerformed(evt);
            }
        });
        mnOpGeometri.add(miFliphorizontal);

        miRotate.setText("Rotate");

        mirr90.setText("Rotate Right90");
        mirr90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mirr90ActionPerformed(evt);
            }
        });
        miRotate.add(mirr90);

        mirl90.setText("Rotate Left 90");
        mirl90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mirl90ActionPerformed(evt);
            }
        });
        miRotate.add(mirl90);

        mir180.setText("Rotate 180");
        mir180.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mir180ActionPerformed(evt);
            }
        });
        miRotate.add(mir180);

        mirfr.setText("Free Rotate");
        mirfr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mirfrActionPerformed(evt);
            }
        });
        miRotate.add(mirfr);

        mnOpGeometri.add(miRotate);

        miTranslasi.setText("Translasi");
        miTranslasi.setActionCommand("Translasi Horisontal");
        miTranslasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miTranslasiActionPerformed(evt);
            }
        });
        mnOpGeometri.add(miTranslasi);

        jMenuBar1.add(mnOpGeometri);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(slider_rotate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_derajat))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(slider_Brightness, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_SliderNumber)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lbl_derajat)
                        .addGap(200, 200, 200)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(slider_Brightness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_SliderNumber))
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(slider_rotate, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public class SliderListener implements ChangeListener {

        @Override
        public void stateChanged(ChangeEvent e) {
            int value = slider_Brightness.getValue();
            String str = Integer.toString(value);
            lbl_SliderNumber.setText(str);
            gambar.Brightness(slider_Brightness.getValue());
            jLabel1.setIcon(gambar.ScaleResultIcon);
            
        }     
    }
    
    private void isSliderUse(boolean kondisi){
        if(kondisi == true){
            
            slider_Brightness.setVisible(true);
            lbl_SliderNumber.setVisible(true);
        } else {
            
            slider_Brightness.setVisible(false);
            lbl_SliderNumber.setVisible(false);
        }
        
    }
    
    @Override
    public void paint (Graphics g) {
        super.paint(g);
        
    }
    
    private void miBukaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBukaActionPerformed
        JFileChooser TDialog= new JFileChooser();
        if(TDialog.showOpenDialog(null) == JFileChooser.APPROVE_OPTION)
        {
            gambar=new ClassGambar(TDialog.getSelectedFile().getAbsolutePath(), 355, 355);
            jLabel1.setIcon(gambar.GetIcon());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_miBukaActionPerformed

    private void miGrayscaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miGrayscaleActionPerformed
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.Grayscale();
        jLabel1.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_miGrayscaleActionPerformed

    private void miSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSimpanActionPerformed
        // TODO add your handling code here:
        JFileChooser TDialog = new JFileChooser();
        if(TDialog.showSaveDialog(null) == JFileChooser.APPROVE_OPTION)
        {
            gambar.SaveImage(TDialog.getSelectedFile().getAbsolutePath());
            
        }
    }//GEN-LAST:event_miSimpanActionPerformed

    private void miKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miKeluarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_miKeluarActionPerformed

    private void miBinerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBinerActionPerformed
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.Biner();
        jLabel1.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_miBinerActionPerformed

    private void miDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miDefaultActionPerformed
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.Default();
        jLabel1.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_miDefaultActionPerformed

    private void miBrightnessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miBrightnessActionPerformed
        // TODO add your handling code here:
        isSliderUse(true);
        gambar.Brightness(slider_Brightness.getValue());
        jLabel1.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_miBrightnessActionPerformed

    private void mizoomoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mizoomoutActionPerformed
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.zoomout();
        jLabel1.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_mizoomoutActionPerformed

    private void miflipvertikalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miflipvertikalActionPerformed
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.flipV();
        jLabel1.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_miflipvertikalActionPerformed

    private void miFliphorizontalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFliphorizontalActionPerformed
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.flipH();
        jLabel1.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_miFliphorizontalActionPerformed

    private void mizoominActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mizoominActionPerformed
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.zoomin();
        jLabel1.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_mizoominActionPerformed

    private void miTranslasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miTranslasiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_miTranslasiActionPerformed

    private void mirr90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mirr90ActionPerformed
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.Rotate(90, this);
        jLabel1.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_mirr90ActionPerformed

    private void mirl90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mirl90ActionPerformed
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.Rotate(-90, this);
        jLabel1.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_mirl90ActionPerformed

    private void mir180ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mir180ActionPerformed
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.Rotate(180, this);
        jLabel1.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_mir180ActionPerformed

    private void mirfrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mirfrActionPerformed
        // TODO add your handling code here:
        slider_rotate.setEnabled(true);
    }//GEN-LAST:event_mirfrActionPerformed

    private void slider_rotateStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider_rotateStateChanged
        // TODO add your handling code here:
        isSliderUse(false);
        gambar.Rotate((int)(double)slider_rotate.getValue(), this);
        int a = slider_rotate.getValue();
        lbl_derajat.setText(Integer.toString(a));
        jLabel1.setIcon(gambar.ScaleResultIcon);
    }//GEN-LAST:event_slider_rotateStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jframegambar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jframegambar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jframegambar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jframegambar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new jframegambar().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JLabel lbl_SliderNumber;
    private javax.swing.JLabel lbl_derajat;
    private javax.swing.JMenuItem miBiner;
    private javax.swing.JMenuItem miBrightness;
    private javax.swing.JMenuItem miBuka;
    private javax.swing.JMenuItem miDefault;
    private javax.swing.JMenuItem miFliphorizontal;
    private javax.swing.JMenuItem miGrayscale;
    private javax.swing.JMenuItem miKeluar;
    private javax.swing.JMenu miRotate;
    private javax.swing.JMenuItem miSimpan;
    private javax.swing.JMenuItem miTranslasi;
    private javax.swing.JMenuItem miflipvertikal;
    private javax.swing.JMenuItem mir180;
    private javax.swing.JMenuItem mirfr;
    private javax.swing.JMenuItem mirl90;
    private javax.swing.JMenuItem mirr90;
    private javax.swing.JMenuItem mizoomin;
    private javax.swing.JMenuItem mizoomout;
    private javax.swing.JMenu mnEdit;
    private javax.swing.JMenu mnFile;
    private javax.swing.JMenu mnOpGeometri;
    private javax.swing.JSlider slider_Brightness;
    private javax.swing.JSlider slider_rotate;
    // End of variables declaration//GEN-END:variables

